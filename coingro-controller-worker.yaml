apiVersion: v1
kind: Service
metadata:
  name: coingro-controller-svc
  namespace: coingro
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: coingro-controller
    role: orchestrator
    group: worker
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: coingro-controller-ingress
  namespace: coingro
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: coingro-controller-svc
            port:
              number: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: coingro-controller
  namespace: coingro
spec:
  # modify replicas according to your case
  selector:
    matchLabels:
      app: coingro-controller
      role: orchestrator
      group: worker
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: coingro-controller
        role: orchestrator
        group: worker
    spec:
      containers:
      - name: coingro-controller
        image: us-central1-docker.pkg.dev/coingora/coingro-images/coingro-controller:1.0.4
        imagePullPolicy: Always
        # resources:
        #   requests:
        #     cpu: 100m
        #     memory: 100Mi
        env:
        - name: CG_CONTROLLER_APP_ENV
          value: kubernetes
        - name: CG_CONTROLLER_GROUP
          value: worker
        - name: CG_CONTROLLER_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: COINGRO_CONTROLLER__INITIAL_STATE
          value: running
        - name: COINGRO_CONTROLLER__CG_IMAGE
          value: us-central1-docker.pkg.dev/coingora/coingro-images/coingro:1.0.12
        - name: COINGRO_CONTROLLER__NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /coingro/strategies
          name: strategies
          readOnly: true
        # - mountPath: /coingro/user_data
        #   name: user-data
      volumes:
      - name: strategies
        persistentVolumeClaim:
          claimName: strategies-pvc
      # - name: user-data
      #   persistentVolumeClaim:
      #     claimName: user-data-pvc
